---
import Layout from '../../layouts/Layout.astro';
import { lessons } from '../../data/lingo-lessons-data';
import type { Lesson } from '../../types/lesson';

export const prerender = true;

export interface Props {
  lesson_id: string;
  lesson: Lesson;
}

export async function getStaticPaths() {
  return lessons.map((lesson) => ({
    params: { lesson_id: lesson.lesson_id },
    props: { lesson }
  }));
}

const { lesson } = Astro.props;
---

<Layout title={`${lesson.title} - Speed of Mastery`}>
  <!-- Navigation Header -->
  <header class="bg-white shadow-sm border-b">
    <div class="container mx-auto px-4 py-4">
      <div class="flex items-center justify-between">
        <a href="/" class="text-2xl font-bold text-primary">TRM2 - Arabic Learning</a>
        <nav class="flex space-x-6">
          <a href="/" class="text-gray-700 hover:text-primary">Home</a>
          <a href="/lessons" class="text-gray-700 hover:text-primary">Lessons</a>
          <a href="/ai" class="text-gray-700 hover:text-primary">AI Tools</a>
          <a href="/progress" class="text-gray-700 hover:text-primary">Progress</a>
        </nav>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <div class="container mx-auto max-w-4xl py-8 px-4">
    <!-- Back Button -->
    <div class="mb-6">
      <a href="/" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
        <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Back to Home
      </a>
    </div>

    <!-- Lesson Header -->
    <div class="mb-8 text-center">
      <h1 class="text-4xl font-bold text-primary mb-4">{lesson.title}</h1>
      <div class="flex items-center justify-center space-x-4">
        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
          {lesson.topic}
        </span>
        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
          {lesson.level}
        </span>
      </div>
    </div>

    <!-- AI Tools Section -->
    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 mb-8">
      <h2 class="text-2xl font-bold text-gray-800 mb-4 flex items-center">
        <svg class="w-6 h-6 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
        </svg>
        AI Learning Tools
      </h2>
      <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
        <button class="p-4 bg-white rounded-lg border hover:shadow-md transition-shadow" onclick="alert('AI Text Generation - Coming Soon!')">
          <div class="text-center">
            <svg class="w-8 h-8 mx-auto mb-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
            </svg>
            <span class="text-sm font-medium">Text Generation</span>
          </div>
        </button>
        <button class="p-4 bg-white rounded-lg border hover:shadow-md transition-shadow" onclick="alert('AI Translation - Coming Soon!')">
          <div class="text-center">
            <svg class="w-8 h-8 mx-auto mb-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.5 9H3m0 0h9m-9 0v2m9-2v2M9 12l2 2 4-4"></path>
            </svg>
            <span class="text-sm font-medium">Translation</span>
          </div>
        </button>
        <button class="p-4 bg-white rounded-lg border hover:shadow-md transition-shadow" onclick="alert('AI Speech - Coming Soon!')">
          <div class="text-center">
            <svg class="w-8 h-8 mx-auto mb-2 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"></path>
            </svg>
            <span class="text-sm font-medium">Speech</span>
          </div>
        </button>
        <button class="p-4 bg-white rounded-lg border hover:shadow-md transition-shadow" onclick="alert('AI Image Generation - Coming Soon!')">
          <div class="text-center">
            <svg class="w-8 h-8 mx-auto mb-2 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <span class="text-sm font-medium">Image Gen</span>
          </div>
        </button>
        <button class="p-4 bg-white rounded-lg border hover:shadow-md transition-shadow" onclick="alert('AI Quiz - Coming Soon!')">
          <div class="text-center">
            <svg class="w-8 h-8 mx-auto mb-2 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span class="text-sm font-medium">Quiz</span>
          </div>
        </button>
        <button class="p-4 bg-white rounded-lg border hover:shadow-md transition-shadow" onclick="alert('AI Tutor - Coming Soon!')">
          <div class="text-center">
            <svg class="w-8 h-8 mx-auto mb-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M12 2.25a9.75 9.75 0 100 19.5 9.75 9.75 0 000-19.5z"></path>
            </svg>
            <span class="text-sm font-medium">AI Tutor</span>
          </div>
        </button>
      </div>
    </div>

    <!-- Lesson Content -->
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
      <h2 class="text-2xl font-bold text-gray-800 mb-4">Lesson Explanation</h2>
      <p class="text-lg text-gray-700 leading-relaxed">{lesson.arabic_explanation}</p>
    </div>

    <!-- Examples -->
    {lesson.examples && lesson.examples.length > 0 && (
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-2xl font-bold text-gray-800 mb-4">Examples</h2>
        <div class="space-y-4">
          {lesson.examples.map((example, index) => (
            <div class="border-l-4 border-blue-500 pl-4">
              <p class="text-gray-800 mb-2"><strong>English:</strong> {example.english}</p>
              <p class="text-gray-800 text-right" dir="rtl"><strong>Arabic:</strong> {example.arabic}</p>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Interactive Exercises -->
    {lesson.interactive_exercises && lesson.interactive_exercises.length > 0 && (
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-2xl font-bold text-gray-800 mb-4">Practice Exercises</h2>
        <div class="space-y-6">
          {lesson.interactive_exercises.map((exercise, index) => (
            <div class="border rounded-lg p-4">
              <h3 class="text-lg font-semibold text-gray-800 mb-3">{exercise.question}</h3>
              <div class="space-y-2">
                {exercise.choices.map((choice, choiceIndex) => (
                  <label class="flex items-center space-x-3 cursor-pointer">
                    <input type="radio" name={`exercise-${index}`} value={choice} class="text-blue-600">
                    <span class="text-gray-700">{choice}</span>
                  </label>
                ))}
              </div>
              <button class="mt-3 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700" onclick="checkAnswer(this, '${exercise.correct_answer}')">
                Check Answer
              </button>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Additional Notes -->
    {lesson.additional_notes && (
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-2xl font-bold text-gray-800 mb-4">Additional Notes</h2>
        <p class="text-gray-700">{lesson.additional_notes}</p>
      </div>
    )}

    <!-- Common Mistakes -->
    {lesson.common_mistakes && (
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-2xl font-bold text-gray-800 mb-4">Common Mistakes</h2>
        <p class="text-gray-700">{lesson.common_mistakes}</p>
      </div>
    )}
  </div>

  <!-- Footer Navigation -->
  <footer class="bg-gray-50 border-t mt-12">
    <div class="container mx-auto px-4 py-6">
      <div class="flex justify-center space-x-8">
        <a href="/" class="text-gray-600 hover:text-primary">Home</a>
        <a href="/lessons" class="text-gray-600 hover:text-primary">All Lessons</a>
        <a href="/ai" class="text-gray-600 hover:text-primary">AI Tools</a>
        <a href="/progress" class="text-gray-600 hover:text-primary">Progress</a>
      </div>
    </div>
  </footer>
</Layout>

<script>
  function checkAnswer(button, correctAnswer) {
    const radioButtons = button.parentElement.querySelectorAll('input[type="radio"]');
    let selectedAnswer = '';
    
    radioButtons.forEach(radio => {
      if (radio.checked) {
        selectedAnswer = radio.value;
      }
    });
    
    if (!selectedAnswer) {
      alert('Please select an answer first!');
      return;
    }
    
    if (selectedAnswer === correctAnswer) {
      button.textContent = 'Correct! ✓';
      button.className = 'mt-3 px-4 py-2 bg-green-600 text-white rounded';
      button.disabled = true;
    } else {
      button.textContent = 'Wrong! Try Again';
      button.className = 'mt-3 px-4 py-2 bg-red-600 text-white rounded';
      setTimeout(() => {
        button.textContent = 'Check Answer';
        button.className = 'mt-3 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700';
      }, 2000);
    }
  }
</script>
