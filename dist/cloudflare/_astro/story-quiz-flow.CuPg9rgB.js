import{t as l,q as a,s as n,r as h}from"./dialog.BMZ84p1_.js";import"./index.CvKvpgP4.js";function p(o){const s=[],t={"(":")","[":"]","{":"}"};for(let r=0;r<o.length;r++){const e=o[r];if(t[e])s.push(e);else if(Object.values(t).includes(e)&&t[s.pop()]!==e)return!1}return s.length===0}async function y(o){const r=await(await l({model:"@cf/meta/llama-3-8b-instruct",inputs:{messages:[{role:"system",content:'You are an expert quiz creator. Your task is to generate a JSON object representing a quiz based on the provided story. The JSON object must have a key "questions" which is an array of exactly 5 multiple-choice question objects. Each question object must have keys "question", "options" (an array of 4 strings), and "correct_answer". Do not output any text other than the JSON object.'},{role:"user",content:o}]}})).json();try{const e=r.result.response,i=e.indexOf("{"),c=e.lastIndexOf("}");if(i!==-1&&c!==-1){const u=e.substring(i,c+1);if(p(u))return JSON.parse(u)}throw new Error("Incomplete or invalid JSON object found in response")}catch(e){throw console.error("Failed to parse JSON from Cloudflare AI:",r.result.response,e),new Error("Failed to parse JSON from AI response.")}}a({storyContent:n().describe("The content of the story to generate a quiz from.")});const d=a({question:n().describe("The quiz question about the story."),options:h(n()).length(4).describe("An array of 4 possible answers."),correct_answer:n().describe("The correct answer from the options.")});a({questions:h(d).length(5).describe("An array of exactly 5 quiz questions based on the story.")});async function b({storyContent:o}){const s=`Based on the following short story, generate a quiz with exactly 5 multiple-choice questions to test comprehension. Each question must have 4 options, and you must clearly indicate the correct answer. The questions should be about the plot, characters, or key details of the story.

Your output must be a single JSON object with a "questions" key, which holds an array of 5 question objects.

Story:
---
${o}
---`;try{return await y(s)}catch(t){return console.error("Failed to generate story quiz:",t),{questions:[]}}}export{b as generateStoryQuiz};
